{"version":3,"sources":["logo.svg","sections/profileheader/profile-header.styles.js","sections/profileheader/profile-header.section.js","sections/porfoliolist/portfolio-list.styles.js","sections/porfoliolist/portfolio-list.section.js","components/navbar.component.js","screens/portfolio.screen.js","App.js","reportWebVitals.js","index.js"],"names":["ProfileContainer","styled","div","ProfileBlobContainer","ProfileAvatar","img","ProfileBody","p","ProfileHeading","h1","ProfileSection","image","profileData","title","subtitle","body","src","PortfolioListContainer","BasePortfolioItemContainer","LongPorfolioItemContainer","ShortPorfolioItemContainer","ProjectImage","PortfolioDescriptionContainer","TechTagContainer","TechTag","ShortPortfolioHeading","TechTagsBox","technologies","map","tech","uuidv4","ItemDescription","project","heading","description","githubLink","publicLink","publicLinkCallout","longItem","href","target","rel","PortfolioItem","isLeft","formattedProject","camelize","ShortPortfolioItem","PortfolioList","projects","useRef","proj","current","BaseNavBar","nav","NavBarList","ul","NavBar","li","children","LineBreak","hr","PortfolioScreen","console","log","hasProjects","length","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.432e2023.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import styled from \"styled-components\";\n\nexport const ProfileContainer = styled.div`\n  background-color: var(--bg);\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  padding: 1rem 2rem;\n  flex-direction: column;\n`;\n\n//border: var(--border);\n//box-shadow: rgba(100, 100, 100, 0.5) 0px 2px 4px 4px;\n// background-color: var(--bg-accent);\nexport const ProfileBlobContainer = styled.div`\n  background-color: var(--bg);\n  padding: 1rem;\n  border-radius: 10px;\n  color: var(--text-color);\n  justify-content: center;\n  text-align: center;\n  width: 70%;\n`;\n\n// box-shadow: rgba(100, 100, 100, 0.5) 2px 4px 8px;\nexport const ProfileAvatar = styled.img`\n  border-radius: 50%;\n  width: 10rem;\n  height: 10rem;\n  margin: 1rem;\n  margin-top: 4rem;\n  border: var(--border);\n`;\n\n// justify-content: left;\n//  text-align: left;\nexport const ProfileBody = styled.p``;\n\nexport const ProfileHeading = styled.h1`\n  padding: 0;\n`;\n","import React from \"react\";\n\nimport {\n  ProfileContainer,\n  ProfileAvatar,\n  ProfileBlobContainer,\n  ProfileBody,\n  ProfileHeading,\n} from \"./profile-header.styles\";\n\nimport profileData from \"./profile_data.json\";\n\nconst ProfileSection = () => {\n  const { image, title, subtitle, body } = profileData;\n\n  return (\n    <ProfileContainer>\n      <ProfileAvatar src={image} />\n      <ProfileBlobContainer>\n        <ProfileHeading>{title}</ProfileHeading>\n        <h3>{subtitle}</h3>\n        <ProfileBody>{body}</ProfileBody>\n      </ProfileBlobContainer>\n    </ProfileContainer>\n  );\n};\n\nexport default ProfileSection;\n","import styled from \"styled-components\";\nimport camelize from \"camelize\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport const PortfolioListContainer = styled.div`\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst BasePortfolioItemContainer = styled.div`\n  background-color: var(--bg-accent);\n  border-radius: var(--border-radius);\n  align-items: flex-start;\n  display: flex;\n  flex-direction: row;\n  width: 80%;\n  margin: 2rem;\n  padding: 2rem;\n`;\n\nconst LongPorfolioItemContainer = styled(BasePortfolioItemContainer)`\n  align-items: flex-start;\n`;\n\nconst ShortPorfolioItemContainer = styled(BasePortfolioItemContainer)`\n  align-items: center;\n`;\n\nconst ProjectImage = styled.img`\n  width: 16rem;\n  height: 16rem;\n  object-fit: cover;\n  border: var(--border);\n  border-radius: var(--border-radius);\n  margin: 2rem;\n`;\n\nconst PortfolioDescriptionContainer = styled.div`\n  color: var(--text-color);\n  display: flex;\n  flex-direction: column;\n  justify-contents: flex-start;\n  align-items: center;\n  margin: 2rem;\n`;\n\n// align-items: flex-start;\nconst TechTagContainer = styled.div`\n  flex-direction: row;\n  flex-wrap: wrap;\n  display: flex;\n`;\n\nconst TechTag = styled.p`\n  background-color: var(--bg);\n  padding: 0.5rem;\n  margin: 0.5rem;\n  border-radius: var(--border-radius);\n  display: inline;\n`;\n\nconst ShortPortfolioHeading = styled.h1`\n  color: var(--text-color);\n  margin: 2rem;\n`;\n\nexport const TechTagsBox = ({ technologies }) => (\n  <TechTagContainer>\n    {technologies.map((tech) => (\n      <TechTag key={uuidv4()}>{tech}</TechTag>\n    ))}\n  </TechTagContainer>\n);\n\nconst ItemDescription = ({ project }) => {\n  const {\n    heading,\n    description,\n    technologies,\n    githubLink,\n    publicLink,\n    publicLinkCallout,\n    longItem,\n  } = project;\n  return (\n    <PortfolioDescriptionContainer>\n      {longItem && <h2>{heading}</h2>}\n      <TechTagsBox technologies={technologies} />\n      <br />\n      <p>{description}</p>\n\n      <p>\n        {publicLink && (\n          <>\n            {\" Check it out on \"}\n            <a href={publicLink} target=\"_blank\" rel=\"noreferrer\">\n              {publicLinkCallout}\n            </a>\n            {\" and \"}\n          </>\n        )}\n        {publicLink ? \"f\" : \"F\"}\n        ind the{\" \"}\n        <a href={githubLink} target=\"_blank\" rel=\"noreferrer\">\n          github repo\n        </a>{\" \"}\n        here.\n      </p>\n    </PortfolioDescriptionContainer>\n  );\n};\n\nexport const PortfolioItem = ({ project, isLeft }) => {\n  const formattedProject = camelize(project);\n  const image = formattedProject.image;\n\n  return (\n    <LongPorfolioItemContainer>\n      {isLeft && image && <ProjectImage src={image} />}\n      <ItemDescription project={formattedProject} />\n      {!isLeft && image && <ProjectImage src={image} />}\n    </LongPorfolioItemContainer>\n  );\n};\n\nexport const ShortPortfolioItem = ({ project, isLeft }) => {\n  const formattedProject = camelize(project);\n  const heading = formattedProject.heading;\n\n  return (\n    <ShortPorfolioItemContainer>\n      {isLeft && <ShortPortfolioHeading>{heading}</ShortPortfolioHeading>}\n      <ItemDescription project={formattedProject} />\n      {!isLeft && <ShortPortfolioHeading>{heading}</ShortPortfolioHeading>}\n    </ShortPorfolioItemContainer>\n  );\n};\n","import React, { useRef } from \"react\";\nimport camelize from \"camelize\";\n\nimport {\n  PortfolioItem,\n  ShortPortfolioItem,\n  PortfolioListContainer,\n} from \"./portfolio-list.styles\";\n\nconst PortfolioList = ({ projects }) => {\n  const isLeft = useRef(false);\n  return (\n    <PortfolioListContainer>\n      {projects.map((proj) => {\n        isLeft.current = !isLeft.current;\n        const project = camelize(proj);\n        const { longItem, heading } = project;\n        return longItem ? (\n          <PortfolioItem\n            project={project}\n            key={heading}\n            isLeft={isLeft.current}\n          />\n        ) : (\n          <ShortPortfolioItem\n            project={project}\n            key={heading}\n            isLeft={isLeft.current}\n          />\n        );\n      })}\n    </PortfolioListContainer>\n  );\n};\n\nexport default PortfolioList;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst BaseNavBar = styled.nav`\n  position: sticky;\n  top: 0;\n  background-color: var(--bg);\n  height: var(--nav-size);\n  padding: 0 1rem;\n  border-bottom: var(--border);\n`;\n\nconst NavBarList = styled.ul`\n  max-width: 100%;\n  height: 100%;\n  display: flex;\n`;\n\nconst NavBarItemContainer = styled.li`\n  width: calc(var(--nav-size) * 0.8);\n  height: calc(var(--nav-size) * 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--bg-accent);\n  color: var(--bg-accent);\n  border-radius: 50%;\n  margin: calc(var(--nav-size) * 0.1);\n`;\n\nexport const NavBarItem = ({ icon }) => {\n  return <NavBarItemContainer>{icon}</NavBarItemContainer>;\n};\n\nexport const NavBar = ({ children }) => {\n  return (\n    <BaseNavBar>\n      <NavBarList>{children}</NavBarList>\n    </BaseNavBar>\n  );\n};\n","import React from \"react\";\n\nimport styled from \"styled-components\";\n\nimport ProfileSection from \"../sections/profileheader/profile-header.section\";\nimport PortfolioList from \"../sections/porfoliolist/portfolio-list.section\";\nimport { NavBar, NavBarItem } from \"../components/navbar.component\";\n\n// background-color: var(--text-color);\n// color: var(--text-color);\nconst LineBreak = styled.hr`\n  border-color: var(--text-color);\n`;\n\nconst PortfolioScreen = ({ projects = [] }) => {\n  console.log(\"Projects\", projects);\n  const hasProjects = projects.length !== 0;\n  return (\n    <>\n      <NavBar>\n        <p>Contact</p>\n      </NavBar>\n      <ProfileSection />\n      <LineBreak />\n      {hasProjects && <PortfolioList projects={projects} />}\n    </>\n  );\n};\n\nexport default PortfolioScreen;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport PortfolioScreen from \"./screens/portfolio.screen\";\nimport projects from \"./portfolio.json\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PortfolioScreen projects={projects} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}