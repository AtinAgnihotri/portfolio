(this.webpackJsonpmyportfolio=this.webpackJsonpmyportfolio||[]).push([[0],{17:function(t){t.exports=JSON.parse('[{"long_item":true,"heading":"Overhead","image":"https://github.com/AtinAgnihotri/Overhead/blob/main/ExpenseTrackingAppScreenshots/rot_light_dark.gif?raw=true","technologies":["SwiftUI","UIKit","Swift","Core Data","CloudKit","Core Graphics","Core Animation","Local Notification","UserDefaults","IntrospectSwiftUI","Swift Package Manager","Swift"],"description":"An expense tracking app with Data persistence and live data sync that helps users track their expenses but settings monthly limits, data visualisations using charts and getting helpful reminders through local notifications.","github_link":"https://github.com/AtinAgnihotri/Overhead","public_link":"https://testflight.apple.com/join/114vx8iC","public_link_callout":"Testflight"},{"long_item":true,"heading":"Meals to Go","image":"https://github.com/AtinAgnihotri/MealsToGoClone/raw/main/meals_to_go.png","technologies":["React Native","React Navigation","React Native Maps (Google and Apple Maps)","Firebase Auth","Lottie","AsyncStorage","Expo Camera"],"description":"A Zomato-esque clone made in React Native, where you can search for a city and see all the restaurants available in it, either in a list or a map view. You can go on to add them to favourites, and view favourites in a Horizontal Carousal or a favourites list in your profile section, or browse the menus available for the restaurants. The login and registration is handled through Firebase auth, and profile settings are persisted through Async Storage.","github_link":"https://github.com/AtinAgnihotri/MealsToGoClone","public_link":"https://expo.dev/@atinagnihotri/MealsToGo","public_link_callout":"Expo Client"},{"long_item":true,"heading":"Capital Cities","image":"https://github.com/AtinAgnihotri/CapitalCities/raw/main/capitalcities.png","technologies":["UIKIt","MapView","Core Location","WebView","Swift"],"description":"A demo project to practice with MapKit. Lists out a few preselected capitals in Europe, with a variety of different views to choose from, creates a marker on their location, with special callout views that can navigate the user to an app managed web-view containing the wikipedia articles on the same.","github_link":"https://github.com/AtinAgnihotri/CapitalCities","public_link":null,"public_link_callout":null},{"long_item":true,"heading":"Bookheads","image":"https://github.com/AtinAgnihotri/Bookheads-ios/raw/main/bookheads.png","technologies":["SwiftUI","Core Data","UserDefaults","Swift"],"description":"A Book rating and review app made with SwiftUI, with data modeling and persistence done through Core Data.","github_link":"https://github.com/AtinAgnihotri/Bookheads-ios","public_link":null,"public_link_callout":null},{"long_item":true,"heading":"Meme Machine","image":"https://github.com/AtinAgnihotri/MemeMachine/raw/main/meme_machine.png","technologies":["UIKit","Core Graphics","NSAttributedStrings","Core Image","Swift"],"description":"An iOS App to create 2014 boomer-esque meme on any image, that can be easily shared to any other apps. Made with UIKit and Core Graphics.","github_link":"https://github.com/AtinAgnihotri/MemeMachine","public_link":null,"public_link_callout":null},{"long_item":true,"heading":"Ape Out","image":"https://github.com/AtinAgnihotri/ApeOut/raw/main/ape_out.png","technologies":["UIKit","SpriteKit","Core Graphics","Swift"],"description":"Apes with exploding banans. What could go wrong? A two-person game where the object is to make hit the player with your projectile before they hit you, amist a concrete jungle of procedurally generated and highly destructable buildings.","github_link":"https://github.com/AtinAgnihotri/ApeOut","public_link":null,"public_link_callout":null},{"long_item":true,"heading":"Apple Stocks Clone","image":"https://raw.githubusercontent.com/AtinAgnihotri/AppleStocksClone/main/apple_stocks_clone.png","technologies":["SwiftUI","Core Animation","URLSession","Swift"],"description":"A clone of the Apple Stocks App made with SwiftUI in MVVM Pattern.","github_link":"https://github.com/AtinAgnihotri/AppleStocksClone","public_link":null,"public_link_callout":null},{"long_item":true,"heading":"News App","image":"https://github.com/AtinAgnihotri/NewsApp/raw/main/news_app.png","technologies":["UIKit","NewsAPI","URLSession","Swift"],"description":"A news app made with UIKit in MVVM pattern, that consumes the top-news endpoint of newsapi.org API","github_link":"https://github.com/AtinAgnihotri/NewsApp","public_link":null,"public_link_callout":null},{"long_item":true,"heading":"Ode To Luna","image":"https://github.com/AtinAgnihotri/Ode-to-Luna/raw/main/ode_to_luna.png","technologies":["SwiftUI","Swift"],"description":"A commemorative to humanity\'s trysts with our closest celestial neighbor, Ode to Luna is a an app that lists the Apollo missions, their details and the briefs about the astronauts that went to the moon. Made with SwiftUI in MVVM Pattern.","github_link":"https://github.com/AtinAgnihotri/Ode-to-Luna","public_link":null,"public_link_callout":null},{"long_item":true,"heading":"Shooting Gallery","image":"https://github.com/AtinAgnihotri/ShootoutGallery/raw/main/shooting_galary.gif","technologies":["UIKit","SpriteKit","Swift"],"description":"A shooting galary game for iPads, made in SpriteKit, where you\'re to shoot everything that moves . . . except the yellow duck, DON\'T SHOOT THE YELLOW DUCK!!!","github_link":"https://github.com/AtinAgnihotri/ShootoutGallery","public_link":null,"public_link_callout":null},{"long_item":false,"heading":"Names to Faces","image":null,"technologies":["UIKit","UserDefaults","LocalAuthentication","TouchID","FaceID","Swift"],"description":"A app to click an store images of people with their faces so you never have to spend another awkward conversation trying clever ways of steering clear of the name of person you\'re talking to, whose name you forgot. The app is secured by either Face or Touch ID depending on the iPhone device at hand.","github_link":"https://github.com/AtinAgnihotri/NamesToFaces","public_link":null,"public_link_callout":null},{"long_item":false,"heading":"Swift Secrets","image":null,"technologies":["UIKit","UserDefaults","LocalAuthentication","TouchID","FaceID","iOS Keychain","SwiftKeychainWrapper","Cocoapods","Swift"],"description":"An app to store important and sensitive notes right in your devices keychain protected by Face/Touch Id depending on your iPhone.","github_link":"https://github.com/AtinAgnihotri/SwiftSecrets","public_link":null,"public_link_callout":null},{"long_item":false,"heading":"Filter it","image":null,"technologies":["UIKit","UserDefaults","Core Image","Swift"],"description":"An App made with UIKit and CoreImage to take an image, either by clicking it on camera or from the photo library, and applying Apple\'s built-in images onto the image, with user having various choices in the form of various filters, their intensities, etc.","github_link":"https://github.com/AtinAgnihotri/FilterIt","public_link":null,"public_link_callout":null},{"long_item":false,"heading":"Count My Coffee","image":null,"technologies":["SwiftUI","Swift","CoreML","CreateML"],"description":"An iOS App that tells user when to have their last coffee for a good night\'s sleep based on these three questions, when do they want to wake up, roughly how many hours of sleep do they want and finally how many cups of coffee do they drink per day?","github_link":"https://github.com/AtinAgnihotri/Count-My-Coffee","public_link":null,"public_link_callout":null},{"long_item":false,"heading":"iOS JS Injector","image":null,"technologies":["UIKit","MobileCoreServices","UserDefaults","Codable","Javascript","Swift"],"description":"A sample project to add Javascript based extensions with UI\'s based in UIKit to Safari, by and large the most used browsers across iOS devices. In this project, we add a small Javascript console where you can add and run a javascript command, like `console.log(\'Hello World!\')`","github_link":"https://github.com/AtinAgnihotri/iOSJSInjector","public_link":null,"public_link_callout":null},{"long_item":false,"heading":"PlantTester","image":null,"technologies":["Android","Java","Espresso","Barista","MockWebServer","UIAutomator","Bitrise","Gspread","Python","Trefle API"],"description":"A Dummy App to practice my testing chops. The app has a simple functionality, where on searching Name, Scientific Name or Phylum, you\'ll get the results back from Trefle API. The interesting part is the testing process, on every push the repo is pushed to Bitrise where it build and run Unit and UI Tests and send the reports and test artifacts through mails to stakeholders. There is also the functionality to setup Auto-Sanity at regular timeframes, or trigger testing on manually for a particular branch or commit.","github_link":"https://github.com/AtinAgnihotri/PlantTester","public_link":"https://app.bitrise.io/app/6358872685672728","public_link_callout":"Bitrise Build Page"},{"long_item":false,"heading":"Email Reports","image":null,"technologies":["smtplib","ssl","importlib","MIMEText","MIMEMultipart","xml.etree","Bitrise","Gspread","Python"],"description":"A python program to collate the artifacts generated during Automated UI testing during Bitrise builds, generate reports on the success or failure and relevant details regarding the same, and email them to a list of recipients based on the settings in Bitrise Workflow. This was developed for the aforementioned PlantTester Application, but with a few tweaks can be used for collating any test artifacts on any android build on Bitrise.","github_link":"https://github.com/AtinAgnihotri/EmailReports","public_link":null,"public_link_callout":null},{"long_item":true,"heading":"Step Runner","image":"https://raw.githubusercontent.com/AtinAgnihotri/StepRunner/master/Assets/Sprites/Gameplay/character_maleAdventurer_attack1.png","technologies":["Unity","C#","TextMesh Pro"],"description":"A vertical infinite runner that requires both and skill and luck to get good at.","github_link":"https://github.com/AtinAgnihotri/StepRunner","public_link":"https://play.google.com/store/apps/details?id=com.AtinAgnihotri.StepRunner","public_link_callout":"Google Play Store"},{"long_item":false,"heading":"And Much More","image":null,"technologies":["Swift","Javascript","Python","Java","C#","iOS","React Native","ReactJS","Android","Unity","Maya"],"description":"There\'s a lot of other cool stuff like this, all open-sourced and freely-available","github_link":null,"public_link":"https://github.com/AtinAgnihotri","public_link_callout":"My github profile."}]')},22:function(t,e,i){},23:function(t,e,i){},27:function(t,e,i){"use strict";i.r(e);var n,o,a,r,l,s,c,h,u,g,p,d,b,m,f,j,A,w,k,_,v,x=i(2),O=i.n(x),y=i(12),S=i.n(y),I=(i(22),i.p,i(23),i(3)),C=i(8),M=i(16),U=i(4),T=U.a.div(n||(n=Object(I.a)(["\n  background-color: var(--bg);\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  padding: 1rem 2rem;\n  flex-direction: column;\n"]))),L=U.a.div(o||(o=Object(I.a)(["\n  background-color: var(--bg);\n  padding: 1rem;\n  border-radius: 10px;\n  color: var(--text-color);\n  justify-content: center;\n  text-align: center;\n  width: 70%;\n"]))),P=U.a.img(a||(a=Object(I.a)(["\n  border-radius: 50%;\n  width: 10rem;\n  height: 10rem;\n  margin: 1rem;\n  margin-top: 4rem;\n  border: var(--border);\n"]))),K=U.a.p(r||(r=Object(I.a)([""]))),D=U.a.h1(l||(l=Object(I.a)(["\n  padding: 0;\n"]))),N=i(6),F=i(1),B=function(){var t=N.image,e=N.title,i=N.subtitle,n=N.body;return Object(F.jsxs)(T,{children:[Object(F.jsx)(P,{src:t}),Object(F.jsxs)(L,{children:[Object(F.jsx)(D,{children:e}),Object(F.jsx)("h3",{children:i}),Object(F.jsx)(K,{children:n})]})]})},G=i(5),R=i.n(G),J=i(29),E=U.a.div(s||(s=Object(I.a)(["\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n"]))),V=U.a.div(c||(c=Object(I.a)(["\n  background-color: var(--bg-accent);\n  border-radius: var(--border-radius);\n  align-items: flex-start;\n  display: flex;\n  flex-direction: row;\n  width: 80%;\n  margin: 2rem;\n  padding: 2rem;\n"]))),W=Object(U.a)(V)(h||(h=Object(I.a)(["\n  align-items: flex-start;\n"]))),H=Object(U.a)(V)(u||(u=Object(I.a)(["\n  align-items: center;\n"]))),q=U.a.img(g||(g=Object(I.a)(["\n  width: 16rem;\n  height: 16rem;\n  object-fit: cover;\n  border: var(--border);\n  border-radius: var(--border-radius);\n  margin: 2rem;\n"]))),z=U.a.div(p||(p=Object(I.a)(["\n  color: var(--text-color);\n  display: flex;\n  flex-direction: column;\n  justify-contents: flex-start;\n  align-items: center;\n  margin: 2rem;\n"]))),Y=U.a.div(d||(d=Object(I.a)(["\n  flex-direction: row;\n  flex-wrap: wrap;\n  display: flex;\n"]))),Z=U.a.p(b||(b=Object(I.a)(["\n  background-color: var(--bg);\n  padding: 0.5rem;\n  margin: 0.5rem;\n  border-radius: var(--border-radius);\n  display: inline;\n"]))),Q=U.a.h1(m||(m=Object(I.a)(["\n  color: var(--text-color);\n  margin: 2rem;\n"]))),X=function(t){var e=t.technologies;return Object(F.jsx)(Y,{children:e.map((function(t){return Object(F.jsx)(Z,{children:t},Object(J.a)())}))})},$=U.a.p(f||(f=Object(I.a)(["\n  text-align: left;\n"]))),tt=function(t){var e=t.project,i=t.isLeft,n=e.heading,o=e.description,a=e.technologies,r=e.githubLink,l=e.publicLink,s=e.publicLinkCallout,c=e.longItem;return Object(F.jsxs)(z,{children:[c&&Object(F.jsx)("h2",{children:n}),Object(F.jsx)(X,{technologies:a}),Object(F.jsx)("br",{}),Object(F.jsx)($,{isLeft:i,children:o}),Object(F.jsxs)($,{children:[l&&Object(F.jsxs)(F.Fragment,{children:[" Check it out on ",Object(F.jsx)("a",{href:l,target:"_blank",rel:"noreferrer",children:s})]}),r&&Object(F.jsxs)(F.Fragment,{children:[l?" and f":"F","ind the"," ",Object(F.jsx)("a",{href:r,target:"_blank",rel:"noreferrer",children:"github repo"})," ","here."]})]})]})},et=function(t){var e=t.project,i=t.isLeft,n=R()(e),o=n.image;return Object(F.jsxs)(W,{children:[i&&o&&Object(F.jsx)(q,{src:o}),Object(F.jsx)(tt,{project:n,isLeft:i}),!i&&o&&Object(F.jsx)(q,{src:o})]})},it=function(t){var e=t.project,i=t.isLeft,n=R()(e),o=n.heading;return Object(F.jsxs)(H,{children:[i&&Object(F.jsx)(Q,{children:o}),Object(F.jsx)(tt,{project:n}),!i&&Object(F.jsx)(Q,{children:o})]})},nt=function(t){var e=t.projects,i=Object(x.useRef)(!1);return Object(F.jsx)(E,{children:e.map((function(t){i.current=!i.current;var e=R()(t),n=e.longItem,o=e.heading;return n?Object(F.jsx)(et,{project:e,isLeft:i.current},o):Object(F.jsx)(it,{project:e,isLeft:i.current},o)}))})},ot=U.a.nav(j||(j=Object(I.a)(["\n  position: sticky;\n  top: 0;\n  background-color: var(--bg-accent);\n  height: var(--nav-size);\n  padding: 0 1rem;\n"]))),at=U.a.ul(A||(A=Object(I.a)(["\n  max-width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n"]))),rt=U.a.li(w||(w=Object(I.a)(["\n  padding: 1rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--bg-accent);\n  color: var(--text-color);\n  border-radius: var(--border-radius);\n  margin: calc(var(--nav-size) * 0.1);\n"]))),lt=U.a.a(k||(k=Object(I.a)(["\n  text-decoration: none;\n"]))),st=function(t){var e=t.icon,i=t.text,n=t.link,o=t.onPress;return Object(F.jsx)(rt,{children:Object(F.jsxs)(lt,{href:n,onClick:function(){o&&o()},children:[e,i]})})},ct=function(t){var e=t.children;return Object(F.jsx)(ot,{children:Object(F.jsx)(at,{children:e})})},ht=U.a.hr(_||(_=Object(I.a)(["\n  border-color: var(--text-color);\n"]))),ut=U.a.div(v||(v=Object(I.a)(["\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  width: 100%;\n"]))),gt=function(t){var e=t.projects,i=void 0===e?[]:e;console.log("Projects",i);var n=0!==i.length;return Object(F.jsxs)(F.Fragment,{children:[Object(F.jsxs)(ct,{children:[Object(F.jsx)(st,{text:"Contact",link:"https://atinagnihotri.com/contact/"}),Object(F.jsx)(st,{text:"Site",link:"https://atinagnihotri.com/"}),Object(F.jsxs)(ut,{children:[Object(F.jsx)(st,{icon:Object(F.jsx)(C.a,{}),link:"https://github.com/AtinAgnihotri"}),Object(F.jsx)(st,{icon:Object(F.jsx)(C.b,{}),link:"https://www.linkedin.com/in/atin-agnihotri/"}),Object(F.jsx)(st,{icon:Object(F.jsx)(C.c,{}),link:"https://twitter.com/AgnihotriAtin"}),Object(F.jsx)(st,{icon:Object(F.jsx)(M.a,{}),link:"mailto://atinagnihotri@gmail.com"})]})]}),Object(F.jsx)(B,{}),Object(F.jsx)(ht,{}),n&&Object(F.jsx)(nt,{projects:i})]})},pt=i(17);var dt=function(){return Object(F.jsx)("div",{className:"App",children:Object(F.jsx)(gt,{projects:pt})})},bt=function(t){t&&t instanceof Function&&i.e(3).then(i.bind(null,30)).then((function(e){var i=e.getCLS,n=e.getFID,o=e.getFCP,a=e.getLCP,r=e.getTTFB;i(t),n(t),o(t),a(t),r(t)}))};S.a.render(Object(F.jsx)(O.a.StrictMode,{children:Object(F.jsx)(dt,{})}),document.getElementById("root")),bt()},6:function(t){t.exports=JSON.parse('{"image":"https://avatars.githubusercontent.com/u/11007851?v=4","title":"Atin Agnihotri","subtitle":"Techie, Thinker, Writer, History Buff","body":"Aspiring developer seeking to build iOS-centric / cross-platform performant and satisfying  experiences on the mobile form-factor. Here\'s my portfolio of side-projects."}')}},[[27,1,2]]]);
//# sourceMappingURL=main.fe6eaadb.chunk.js.map